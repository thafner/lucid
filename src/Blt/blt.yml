bin.path: vendor/bin

blt:
  config-files:
    project: ${repo.root}/blt/blt.yml
    local: ${repo.root}/blt/local.blt.yml
    example-local: ${repo.root}/blt/example.local.blt.yml
    schema-version: ${repo.root}/blt/.schema_version
  command-cache-dir: ${blt.root}/cache/commands
  alias:
    auto-install: true

composer:
  bin: ${repo.root}/${bin.path}
  extra: ''

cm:
  # Possible values: core-only, config-split, none.
  strategy: config-split
  core:
    # The parent directory for configuration directories, relative to the docroot.
    path: ${repo.root}/config
    dirs:
      # Corresponding value is defined in config.settings.php.
      sync:
        path: ${cm.core.path}/default
    # Install site directly from existing config.
    # This cannot be used if your install profile implements hook_install.
    install_from_config: false

deploy:
  # If true, dependencies will be built during deploy. If false, you should commit dependencies directly.
  build-dependencies: true
  dir: ${tmp.dir}/blt-deploy
  docroot: ${deploy.dir}/docroot
  exclude_file: ${blt.root}/scripts/blt/deploy/deploy-exclude.txt
  exclude_additions_file: ${repo.root}/blt/deploy-exclude-additions.txt
  gitignore_file: ${blt.root}/scripts/blt/deploy/.gitignore

# Drupal docroot.
docroot: ${repo.root}/web

# Settings for installing Drupal.
drupal:
  account:
    # Admin account name and password will be randomly generated unless set here.
    name: admin
    #pass:
    mail: no-reply@claritypartners.com
  site.mail: ${drupal.account.mail}
  locale: en
  local_settings_file: ${docroot}/sites/${site}/settings/local.settings.php
  settings_file: ${docroot}/sites/${site}/settings.php
  db:
    database: drupal10
    username: drupal10
    password: drupal10
    host: database
    port: 3306

drush:
  alias-dir: ${repo.root}/drush/sites
  aliases:
    local: self
    ci: self
  ansi: true
  bin: ${composer.bin}/drush
  default_alias: ${drush.aliases.local}
  dir: ${docroot}
  sanitize: true

git:
  # The value of a hook should be the file path to a directory containing an
  # executable file named after the hook. Changing a hook value to 'false' will disable it.
  # You should execute `blt blt:init:git-hooks` after modifying these values.
  hooks:
    pre-commit: ${blt.root}/scripts/git-hooks
    pre-push: ${blt.root}/scripts/git-hooks
    commit-msg: ${blt.root}/scripts/git-hooks
  commit-msg:
    # Commit messages must conform to this pattern.
    pattern: "/(^${project.prefix}-[0-9]+(: )[^ ].{15,}\\.)|(Merge branch (.)+)/"
    # Human readable help description explaining the pattern/restrictions.
    help_description: "The commit message should include your project prefix,
                      followed by a hyphen and ticket number, followed by a colon and a space,
                      fifteen characters or more describing the commit, and end with a period."
    # Provide an example of a valid commit message.
    example: "${project.prefix}-123: Update module configuration."

# @todo Move to subkey of validate.
# Note that PHPCS filesets are not configured here, but via phpcs.xml.dist in the root directory. See "Extending BLT" in docs.
phpcs:
  standard: Drupal,DrupalPractice

#$ @todo Move to subkey of fix.
phpcbf:
  filesets:
    - files.php.custom.modules
    - files.php.tests
    - files.php.custom.themes
    - files.frontend.custom.themes

project:
  human_name: My BLT site
  machine_name: my_blt_site
  local:
    hostname: ${project.machine_name}.lndo.site
    protocol: http
    uri: ${project.local.protocol}://${project.local.hostname}
  # Used for enforcing correct git commit msg syntax.
  prefix: CHANGEME
  profile:
    name: minimal

sync:
  # By default, files are not synced during sync:refresh.
  # Set this value to 'true' or pass -D sync.public-files=true
  # to override this behavior.
  public-files: false
  private-files: false
  # Paths to exclude during file syncing operations.
  exclude-paths:
    - styles
    - css
    - js
  commands:
    - source:build:composer
    - lucid:sync:db
    - drupal:update
    - lucid:theme:frontend

# Custom tasks that are triggered at pre-defined times in the build process.
# The tasks hook into BLT's existing commands.
command-hooks:
  # Executed when front end dependencies should be installed.
  frontend-reqs:
    # E.g., ${docroot}/themes/custom/mytheme
    dir: ${docroot}
    # E.g., '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && nvm use 4.4.4 && npm install'
    command: null
  # Executed when front end assets should be generated.
  frontend-assets:
    # E.g., ${docroot}/themes/custom/mytheme
    dir: ${docroot}
    # E.g., '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && nvm use 4.4.4 && npm build'
    command: null
  frontend-test:
    # E.g., ${docroot}/themes/custom/mytheme
    dir: ${docroot}
    # E.g., `npm test`.
    command: null
  pre-commit:
    # E.g., ${docroot}
    dir: ${docroot}
    # E.g., `php -l`.
    command: null
  # Executed before configuration is imported.
  pre-config-import:
    dir: ${docroot}
    command: null
  # Executed after deployment artifact is created.
  post-deploy-build:
    dir: '${deploy.dir}/docroot'
    command: null
  # Executed after source:build is run.
  post-setup-build:
    dir: ${docroot}
    command: null
  # Executed after deploy:push-all is run.
  post-deploy:
    dir: ${docroot}
    command: null

# Note that PHPCS filesets are not configured here, but via phpcs.xml.dist in the root directory. See "Extending BLT" in docs.
validate:
  deprecated:
    filesets:
      - files.php.custom.modules
  lint:
    filesets:
      - files.php.custom.modules
      - files.php.custom.themes
      - files.php.tests
  twig:
    filesets:
      - files.twig
    # Add any custom Twig filters for linter to allow.
    filters: { }
    # Add any custom Twig functions for linter to allow.
    functions: { }
    # Add any custom Twig tests for linter to allow.
    tests: { }
  yaml:
    filesets:
      - files.yaml

lucid:
  database:
    s3_bucket: S3_BUCKET_NAME
    s3_key_prefix_string: prod-db-prefix